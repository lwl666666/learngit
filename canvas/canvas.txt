渲染上下文
	getContext("2d");
绘制矩形
	fillRect(x, y, width, height)绘制一个填充的矩形
	strokeRect(x, y, width, height)绘制一个矩形的边框
	clearRect(x, y, width, height)清除指定矩形区域，让清除部分完全透明。
检查支持性
	if (canvas.getContext){
	  var ctx = canvas.getContext('2d');
	  // drawing code here
	} else {
	  // canvas-unsupported code here
	}
绘制路径
	beginPath()新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径。
	closePath()闭合路径之后图形绘制命令又重新指向到上下文中。
	stroke()通过线条来绘制图形轮廓。
	fill()通过填充路径的内容区域生成实心的图形。
	移动笔触
		moveTo(x, y)
	线
		lineTo(x, y)
	圆弧
		arc(x, y, radius, startAngle, endAngle, anticlockwise)
		画一个以（x,y）为圆心的以radius为半径的圆弧（圆），从startAngle开始到endAngle结束，按照anticlockwise给定的方向（默认为顺时针）来生成。参数anticlockwise 为一个布尔值。为true时，是逆时针方向，否则顺时针方向。
		arcTo(x1, y1, x2, y2, radius)
		根据给定的控制点和半径画一段圆弧，再以直线连接两个控制点。
		注意：arc()函数中的角度单位是弧度，不是度数。角度与弧度的js表达式:radians=(Math.PI/180)*degrees。
	贝塞尔（bezier）以及二次贝塞尔
		quadraticCurveTo(cp1x, cp1y, x, y)绘制贝塞尔曲线，cp1x,cp1y为控制点，x,y为结束点。
		bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)绘制二次贝塞尔曲线，cp1x,cp1y为控制点一，cp2x,cp2y为控制点二，x,y为结束点。
	矩形
		rect(x, y, width, height)
	Path2D()
		new Path2D();     // 空的Path对象
		new Path2D(path); // 克隆Path对象
		new Path2D(d);    // 从SVG建立Path对象
		Path2D.addPath(path [, transform])​添加了一条路径到当前路径（可能添加了一个变换矩阵）。