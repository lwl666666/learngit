JavaScripts

严格模式 "use strict"
typeof操作符
instanceof
	result=person instanceof Object

数值转换 
	Number()
	parseInt()
	parseFloat()
位运算符
	按位非（NOT） ~
	按位与（AND） &
	按位或（OR） |
	按位异或（XOR） ^
	左移 <<
	有符号右移 >>
	无符号右移 >>>
条件操作符
	value=boolean_expression ? true_value : false_value
for-in 语句
	for(property in expression){statement}
for-of
label
	label:statement
break
continue
方法参数
	arguments
没有重载
声明对象
	使用var声明的变量会自动添加到最接近的环境中。如果初始化没有使用var声明，该变量会自动被添加到全局环境中
Object
Array
	Array.isArray()
	toString()
	toLocaleString()
	valueOf()
	join()
	栈方法
	push()
	pop()
	队列方法
	push()
	shift()
	unshift()
	排序
	reverse()
	sort()
	操作方法
	concat()
	slice()
		slice(start) //[start,length-1]
		slice(start,end) //[start,end)
	splice
		删除:splice(startIndex,删除的项数)
		插入，替换:splice(startIndex,删除的项数,要插入的项)
	位置方法
		index()
		lastIndexOf()
	迭代方法
		每个方法接受连个参数：要在每一项上运行的函数和（可选的）运行该函数的作用域。传入这些方法中的函数会接受三个参数：数据项的值，该项在数组中位置和数组对象本身
		every() 	每一项返回ture,则返回true 
		filter()    返回true项组成的数组
		forEach()	每一项运行给定的函数，没有返回值
		map()		返回每次函数调用的结果组成的数组
		some()	
	缩小方法
		reduce()
		reduceRight()
Date类型
	Date.parse() 接受一个表示日期的字符串，返回相应日期的毫秒数。
	Date.UTC(year,month,date,h,m,s)
RegExp类型
function
	arguments.callee 指向拥有这个arguments对象的函数
	this
	caller
Number
	toFixed() 10.01
	toExponential() 	1.0e+1
	toPrecision()
String
	charAt(),charCodeAt()
	concat()
	slice(),substring(),substr()
	indexOf(),lastIndexOf()
	trim()
	toLowerCase(),toLocaleLowerCase(),toUpperCase(),toLocaleUpperCase()
	match(),search(),replace()
Global
	eval()
Math
	min()和max()
	ceil() 向上舍入
	floor() 向下舍入
	round() 四舍五入
	random()	
	
	
	
		
		


getELementById
getElementsByTagName
getElementByClassName
getAttribute
setAttribute

childNodes
nodeType
nodeValue
firstChild
lastChild

document.write
innerHTML
createElement
createTextNode
appendChild
insertBefore
nextSibling

jQuery
$()
ready

效果
隐藏/显示
$(selector).hide(speed,callback);
$(selector).show(speed,callback);
$(selector).toggle(speed,callback);
淡入/淡出
$(selector).fadeIn(speed,callback);
$(selector).fadeOut(speed,callback);
$(selector).fadeToggle(speed,callback);
$(selector).fadeTo(speed,opacity,callback);
滑动
$(selector).slideDown(speed,callback);
$(selector).slideUp(speed,callback);
$(selector).slideToggle(speed,callback);
动画
$(selector).animate({params},speed,callback);
停止动画
$(selector).stop(stopAll,goToEnd);

HTML文本操作
text()
html()
val()
attr()
text()、html() 以及 val()，同样拥有回调函数。回调函数由两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。
•append() - 在被选元素的结尾插入内容
•prepend() - 在被选元素的开头插入内容
•after() - 在被选元素之后插入内容
•before() - 在被选元素之前插入内容
var txt1="<p>Text.</p>";               // 以 HTML 创建新元素
var txt2=$("<p></p>").text("Text.");   // 以 jQuery 创建新元素
var txt3=document.createElement("p");  // 以 DOM 创建新元素
•remove() - 删除被选元素（及其子元素）
•empty() - 从被选元素中删除子元素
remove() 方法也可接受一个参数，允许您对被删元素进行过滤。

jQuery 操作 CSS
jQuery 拥有若干进行 CSS 操作的方法。我们将学习下面这些：
•addClass() - 向被选元素添加一个或多个类
•removeClass() - 从被选元素删除一个或多个类
•toggleClass() - 对被选元素进行添加/删除类的切换操作
•css() - 设置或返回样式属性
jQuery 提供多个处理尺寸的重要方法：
•width()
•height()
•innerWidth()
•innerHeight()
•outerWidth()
•outerHeight()

jQuery 遍历
向上遍历 DOM 树
这些 jQuery 方法很有用，它们用于向上遍历 DOM 树：
•parent()
•parents()
•parentsUntil()

向下遍历 DOM 树
下面是两个用于向下遍历 DOM 树的 jQuery 方法：
•children()
•find()

在 DOM 树中水平遍历
有许多有用的方法让我们在 DOM 树进行水平遍历：
•siblings()
•next()
•nextAll()
•nextUntil()
•prev()
•prevAll()
•prevUntil()

缩写搜索元素的范围
三个最基本的过滤方法是：first(), last() 和 eq()，它们允许您基于其在一组元素中的位置来选择一个特定的元素。
其他过滤方法，比如 filter() 和 not() 允许您选取匹配或不匹配某项指定标准的元素。

jQuery - AJAX 
$(selector).load(URL,data,callback);
load() 方法从服务器加载数据，并把返回的数据放入被选元素中。
必需的 URL 参数规定您希望加载的 URL。
可选的 data 参数规定与请求一同发送的查询字符串键/值对集合。
可选的 callback 参数是 load() 方法完成后所执行的函数名称。
可选的 callback 参数规定当 load() 方法完成后所要允许的回调函数。回调函数可以设置不同的参数：
•responseTxt - 包含调用成功时的结果内容
•statusTXT - 包含调用的状态
•xhr - 包含 XMLHttpRequest 对象

$.get(URL,callback);
$.post(URL,data,callback);
必需的 URL 参数规定您希望请求的 URL。
可选的 data 参数规定连同请求发送的数据。
可选的 callback 参数是请求成功后所执行的函数名。


