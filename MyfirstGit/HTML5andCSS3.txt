HTML5
	全局属性
	contentEditable
	designMode
	hidden
	spellcheck
	tabindex
	
	结构元素
	<header></header>
	<article></article>
	<section></section>
	<nav></nav>
	<aside></aside>
	<time></time> pubdate
	<hgroup></hgroup>
	<footer></footer>
	<address></address>
	
	表单
	属性：form
		formaction
		formmethod
		placeholder
		autofocus
		list="test" <datalist id="test">
		autocomplete
	input元素
		search
		tel
		url
		email
		datetime、date、time、month、week、datetime-local
		number
		range
		color
		file
		output
	表单验证
		required
		pattern
		min,max
		step
		checkValidity
		
		
CSS3
	边框
	•border-radius
	•box-shadow
	•border-image
	背景
	•background-size
	•background-origin
	文本效果
	•text-shadow
	•word-wrap
	字体
	@font-face
	2D 转换
	•translate()
	•rotate()
	•scale()
	•skew()
	•matrix()
	3D 转换
	•rotateX()
	•rotateY()
	过渡
	transition
	动画
	@keyframes 
	多列
	•column-count
	•column-gap
	•column-rule
	•resize
	用户界面
	•box-sizing
	•outline-offset

CSS 布局
display:block 块级元素,一个块级元素会新开始一行并且尽可能撑满容器
		inline 行内元素 包裹一些文字而不会打乱段落的布局
		none 它和 visibility 属性不一样。把 display 设置成 none 元素不会占据它本来应该显示的空间，但是设置成 visibility: hidden; 还会占据空间。
		inline-block 布局
					vertical-align 属性会影响到 inline-block 元素，你可能会把它的值设置为 top 。 
					你需要设置每一列的宽度 
					如果HTML源代码中元素之间有空格，那么列与列之间会产生空隙 

margin:auto 设置块级元素的 width 可以防止它从左到右撑满整个容器。然后你就可以设置左右外边距为 auto 来使其水平居中。元素会占据你所指定的宽度，然后剩余的宽度会一分为二成为左右外边距。
唯一的问题是，当浏览器窗口比元素的宽度还要窄时，浏览器会显示一个水平滚动条来容纳页面。让我们再来改进下这个方案... 

max-width：在这种情况下使用 max-width 替代 width 可以使浏览器更好地处理小窗口的情况

盒模型
当你设置了元素的宽度，实际展现的元素却超出你的设置：这是因为元素的边框和内边距会撑开元素。
box-sizing：当你设置一个元素为 box-sizing: border-box; 时，此元素的内边距和边框不再会增加它的宽度
* {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
position:
	static:static 是默认值。任意 position: static; 的元素不会被特殊的定位。一个 static 元素表示它不会被“positioned”，一个 position 属性被设置为其他值的元素表示它会被“positioned”。 
	relative:relative 表现的和 static 一样，除非你添加了一些额外的属性。在一个相对定位（position属性的值为relative）的元素上设置 top 、 right 、 bottom 和 left 	
			 属性会使其偏离其正常位置。其他的元素的位置则不会受该元素的影响发生位置改变来弥补它偏离后剩下的空隙。
	fixed:一个固定定位（position属性的值为fixed）元素会相对于视窗来定位，这意味着即便页面滚动，它还是会停留在相同的位置。和 relative 一样， top 、 right 、 bottom 和 left 属性都可用。 	
		  一个固定定位元素不会保留它原本在页面应有的空隙（脱离文档流）。 
	absolute:absolute 是最棘手的position值。 absolute 与 fixed 的表现类似，但是它不是相对于视窗而是相对于最近的“positioned”祖先元素。如果绝对定位（position属性的值为absolute）的元素没有“positioned”祖先元素，那么它是相对于文档的 body 元素，并且它会随着页面滚动而移动。记住一个“positioned”元素是指 position 值不是 static 的元素。 
float
clear 属性被用于控制浮动
清除浮动（clearfix hack）:overflow: auto;
媒体查询 “响应式设计（Responsive Design” 是一种让网站针对不同的浏览器和设备“呈现”不同显示效果的策略，这样可以让网站在任何情况下显示的很棒！ 
媒体查询是做此事所需的最强大的工具。让我们使用百分比宽度来布局，然后在浏览器变窄到无法容纳侧边栏中的菜单时，把布局显示成一列： 
@media screen and (min-width:600px) {
  nav {
    float: left;
    width: 25%;
  }
  section {
    margin-left: 25%;
  }
}
@media screen and (max-width:599px) {
  nav li {
    display: inline;
  }
}
使用 meta viewport 之后可以让你的布局在移动浏览器上显示的更好。 
column 可以帮助你很轻松的实现文字的多列布局
.three-column {
  padding: 1em;
  -moz-column-count: 3;
  -moz-column-gap: 1em;
  -webkit-column-count: 3;
  -webkit-column-gap: 1em;
  column-count: 3;
  column-gap: 1em;
}



	