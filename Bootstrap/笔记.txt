Bootstrap
	移动设备优先
	为了让 Bootstrap 开发的网站对移动设备友好，确保适当的绘制和触屏缩放，需要在网页的 head 之中添加 viewport meta 标签，如下所示：
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
	在移动设备浏览器上，通过为 viewport meta 标签添加 user-scalable=no 可以禁用其缩放（zooming）功能。 通常情况下，maximum-scale=1.0 与 user-scalable=no 一起使用。这样禁用缩放功能后，用户只能滚动屏幕，就能让您的网站看上去更像原生应用的感觉。
		<meta name="viewport" content="width=device-width, 
                                     initial-scale=1.0, 
                                     maximum-scale=1.0, 
                                     user-scalable=no">
	响应式图像
		<img src="..." class="img-responsive" alt="响应式图像">
		
	Bootstrap CSS
		全局显示、排版和链接
			基本的全局显示
				body {
					  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
					  font-size: 14px;
					  line-height: 1.428571429;
					  color: #333333;
					  background-color: #ffffff;
					}
			排版
				使用 @font-family-base、 @font-size-base 和 @line-height-base 属性作为排版样式。
			链接样式
				通过属性 @link-color 设置全局链接的颜色。
		网络系统
			容器（Container）
				.container {
				   padding-right: 15px;
				   padding-left: 15px;
				   margin-right: auto;
				   margin-left: auto;
				}
			媒体查询
				/* 超小设备（手机，小于 768px） */
				/* Bootstrap 中默认情况下没有媒体查询 */
				/* 小型设备（平板电脑，768px 起） */
				@media (min-width: @screen-sm-min) { ... }
				/* 中型设备（台式电脑，992px 起） */
				@media (min-width: @screen-md-min) { ... }
				/* 大型设备（大台式电脑，1200px 起） */
				@media (min-width: @screen-lg-min) { ... }
				@media (max-width: @screen-xs-max) { ... }
				@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) { ... }
				@media (min-width: @screen-md-min) and (max-width: @screen-md-max) { ... }
				@media (min-width: @screen-lg-min) { ... }
			Bootstrap 提供了一些辅助类，以便更快地实现对移动设备友好的开发。这些可以通过媒体查询结合大型、小型和中型设备，实现内容对设备的显示和隐藏。
				.visible-xs
				.visible-sm
				.visible-md
				.visible-lg
				.hidden-xs
				.hidden-sm
				.hidden-md
				.hidden-lg
			偏移列
				为了在大屏幕显示器上使用偏移，请使用 .col-md-offset-* 类。这些类会把一个列的左外边距（margin）增加 * 列，其中 * 范围是从 1 到 11。
			列排序
				.col-md-push-*
				.col-md-pull-*
			
		排版类		
			内联子标题
				如果需要向任何标题添加一个内联子标题，只需要简单地在元素两旁添加 <small>，或者添加 .small class，这样子您就能得到一个字号更小的颜色更浅的文本.
			引导主体副本
				为了给段落添加强调文本，则可以添加 class="lead"，这将得到更大更粗、行高更高的文本
			强调
				<small>本行内容是在标签内</small><br>
				<strong>本行内容是在标签内</strong><br>
				<em>本行内容是在标签内，并呈现为斜体</em><br>
				<p class="text-left">向左对齐文本</p>
				<p class="text-center">居中对齐文本</p>
				<p class="text-right">向右对齐文本</p>
				<p class="text-muted">本行内容是减弱的</p>
				<p class="text-primary">本行内容带有一个 primary class</p>
				<p class="text-success">本行内容带有一个 success class</p>
				<p class="text-info">本行内容带有一个 info class</p>
				<p class="text-warning">本行内容带有一个 warning class</p>
				<p class="text-danger">本行内容带有一个 danger class</p>
			缩写
				HTML 元素提供了用于缩写的标记，比如 WWW 或 HTTP。Bootstrap 定义 <abbr> 元素的样式为显示在文本底部的一条虚线边框，当鼠标悬停在上面时会显示完整的文本（只要您为 <abbr> title 属性添加了文本）。为了得到一个更小字体的文本，请添加 .initialism 到 <abbr>。
			地址（Address）
				使用 <address> 标签，您可以在网页上显示联系信息。由于 <address> 默认为 display:block;，您需要使用标签来为封闭的地址文本添加换行。
			引用（Blockquote）
				您可以在任意的 HTML 文本旁使用默认的 <blockquote>。其他选项包括，添加一个 <small> 标签来标识引用的来源，使用 class .pull-right 向右对齐引用
			列表
				Bootstrap 支持有序列表、无序列表和定义列表。
				有序列表：有序列表是指以数字或其他有序字符开头的列表。
				无序列表：无序列表是指没有特定顺序的列表，是以传统风格的着重号开头的列表。如果您不想显示这些着重号，您可以使用 class .list-unstyled 来移除样式。您也可以通过使用 class .list-inline 把所有的列表项放在同一行中。
				定义列表：在这种类型的列表中，每个列表项可以包含 <dt> 和 <dd> 元素。<dt> 代表 定义术语，就像字典，这是被定义的属于（或短语）。接着，<dd> 是 <dt> 的描述。您可以使用 class dl-horizontal 把 <dl> 行中的属于与描述并排显示。
		代码
			第一种是 <code> 标签。如果您想要内联显示代码，那么您应该使用 <code> 标签。
			第二种是 <pre> 标签。如果代码需要被显示为一个独立的块元素或者代码有多行，那么您应该使用 <pre> 标签。
			请确保当您使用 <pre> 和 <code> 标签时，开始和结束标签使用了 unicode 变体： &lt; 和 &gt;。
		表格类
			如果您想要一个只带有内边距（padding）和水平分割的基本表，请添加 class .table
			条纹表格 .table-striped 
			边框表格 .table-bordered 
			悬停表格 .table-hover 
			精简表格 .table-condensed  
			响应式表格  .table-responsive
		表单
			垂直或基本表单
				向父 <form> 元素添加 role="form"。
				把标签和控件放在一个带有 class .form-group 的 <div> 中。这是获取最佳间距所必需的。
				向所有的文本元素 <input>、<textarea> 和 <select> 添加 class .form-control。
			内联表单
				如果需要创建一个表单，它的所有元素是内联的，向左对齐的，标签是并排的，请向 <form> 标签添加 class .form-inline。
			水平表单
				向父 <form> 元素添加 class .form-horizontal。
				把标签和控件放在一个带有 class .form-group 的 <div> 中。	
				向标签添加 class .control-label。
		按钮
			按钮外观
			按钮大小
			按钮状态
			按钮标签 您可以在 <a>、<button> 或 <input> 元素上使用按钮 class。但是建议您在 <button> 元素上使用按钮 class，避免跨浏览器的不一致性问题
		图片
			.img-rounded：添加 border-radius:6px 来获得图片圆角。
			.img-circle：添加 border-radius:50% 来让整个图片变成圆形。
			.img-thumbnail：添加一些内边距（padding）和一个灰色的边框。
			通过在 <img> 标签添加 .img-responsive 类来让图片支持响应式设计。 图片将很好地扩展到父元素。
			.img-responsive 类将 max-width: 100%; 和 height: auto; 样式应用在图片上：
		清除浮动
			.clearfix 
		文本
		背景






